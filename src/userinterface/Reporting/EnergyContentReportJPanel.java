/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.reporting;

import Business.BarChart.EnergySavingsReportChart;
import Business.BarChart.Report;
import Business.Customer.MasterOrderList;
import business.ecosystem.Ecosystem;
import business.enterprise.UnitedConstructionEnterprise;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.Organization;
import business.organization.ReportingOrganization;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import java.util.logging.*;

/**
 *
 * @author Harsh
 */
public class EnergyContentReportJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EnergyContentReportJPanel
     */
    private MasterOrderList mod;
    private JPanel userProcessContainer;
    Report report ;
    private Ecosystem business;

    final String applicationTitle = "Energy Savings";
    final String chartTitle = "Energy Savings";
    float windowEnergyContent = 0;
    float spaceHeatingEnergyContent = 0;
    float powerEnergyContent = 0;
    float lightEnergyContent = 0;
    private final static Logger logr = Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);

    public EnergyContentReportJPanel(JPanel userProcessContainer, MasterOrderList mod,Ecosystem business) {
        initComponents();
        this.mod = mod;
        this.report = new Report();
        this.userProcessContainer = userProcessContainer;
        this.business=business;
        
        addReportToOrganization();
    }
    //adding report to the organization
    public void addReportToOrganization(){
         for(Network network: business.getNetworkList())
        {
            for(Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList())
            {
                if(enterprise instanceof UnitedConstructionEnterprise)
                {
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                    {
                        if(organization instanceof ReportingOrganization)
                        {
                            ((ReportingOrganization) organization).setReport(report);
                        }
                    }
                }
            }
        }    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportDisplayjPanel = new javax.swing.JPanel();
        windowjComboBox = new javax.swing.JComboBox<>();
        spaceHeatingjComboBox = new javax.swing.JComboBox<>();
        powerTypejComboBox = new javax.swing.JComboBox();
        lightFixtureTypejComboBox = new javax.swing.JComboBox<>();
        backJButton = new javax.swing.JButton();
        generateGraphjButton2 = new javax.swing.JButton();
        pieReportjPanel = new javax.swing.JPanel();
        generateGraphjButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reportDisplayjPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        reportDisplayjPanel.setLayout(new java.awt.BorderLayout());
        add(reportDisplayjPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, 670, 400));

        windowjComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single Glass", "Double Pane", "Low E4" }));
        windowjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                windowjComboBoxActionPerformed(evt);
            }
        });
        add(windowjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 140, 30));

        spaceHeatingjComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Electricity", "Gas-Fired", "Wood-Burning", "Boiler" }));
        spaceHeatingjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spaceHeatingjComboBoxActionPerformed(evt);
            }
        });
        add(spaceHeatingjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, 140, 30));

        powerTypejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Electricity", "Solar", "Hybrid energy" }));
        powerTypejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerTypejComboBoxActionPerformed(evt);
            }
        });
        add(powerTypejComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, 140, 30));

        lightFixtureTypejComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LED", "CFL", "Incandescent Light Bulbs" }));
        lightFixtureTypejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightFixtureTypejComboBoxActionPerformed(evt);
            }
        });
        add(lightFixtureTypejComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 380, 140, 30));

        backJButton.setBackground(new java.awt.Color(204, 204, 255));
        backJButton.setFont(new java.awt.Font("Palatino", 1, 18)); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 80, 40));

        generateGraphjButton2.setBackground(new java.awt.Color(204, 204, 255));
        generateGraphjButton2.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        generateGraphjButton2.setText("Generate Total Savings Graph ");
        generateGraphjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateGraphjButton2ActionPerformed(evt);
            }
        });
        add(generateGraphjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 960, -1, 40));

        pieReportjPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pieReportjPanel.setLayout(new java.awt.BorderLayout());
        add(pieReportjPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 670, 380, 270));

        generateGraphjButton1.setBackground(new java.awt.Color(204, 204, 255));
        generateGraphjButton1.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        generateGraphjButton1.setText("Generate Graph");
        generateGraphjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateGraphjButton1ActionPerformed(evt);
            }
        });
        add(generateGraphjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 490, -1, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Energy Savings Report");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("ITF Devanagari Marathi", 1, 18)); // NOI18N
        jLabel2.setText("Space Heating System");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, -1, 30));

        jLabel3.setFont(new java.awt.Font("ITF Devanagari Marathi", 1, 18)); // NOI18N
        jLabel3.setText("Window");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, 30));

        jLabel4.setFont(new java.awt.Font("ITF Devanagari Marathi", 1, 18)); // NOI18N
        jLabel4.setText("Power Source");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, 30));

        jLabel5.setFont(new java.awt.Font("ITF Devanagari Marathi", 1, 18)); // NOI18N
        jLabel5.setText("Light Fixture Type");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void powerTypejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerTypejComboBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_powerTypejComboBoxActionPerformed

    private void generateGraphjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateGraphjButton2ActionPerformed

        DefaultCategoryDataset barchartdata = new DefaultCategoryDataset();
        //setting values of the bar chart
        barchartdata.setValue(report.getTotalEnergySaving(), "Energy Conserved", "");


        JFreeChart barchart = ChartFactory.createBarChart("Total Savings", "", "Cumulative % Energy Saved:", barchartdata, PlotOrientation.VERTICAL, true, true, false);
        CategoryPlot p = barchart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame chartfn = new ChartFrame("REVENUE GENERATION", barchart, true);
        //initComponents();
        chartfn.setSize(650, 400);
        //https://www.jfree.org/jfreechart/api/javadoc/org/jfree/chart/plot/CategoryPlot.html

        pieReportjPanel.removeAll();
        pieReportjPanel.add(chartfn.getChartPanel());
        pieReportjPanel.setVisible(true);
        pieReportjPanel.setEnabled(true);
        pieReportjPanel.validate();
        
        logr.info("Total Savings Graph Button clicked");

    }//GEN-LAST:event_generateGraphjButton2ActionPerformed

    private void lightFixtureTypejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lightFixtureTypejComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lightFixtureTypejComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void generateGraphjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateGraphjButton1ActionPerformed
        setValuesForGraph();
    }//GEN-LAST:event_generateGraphjButton1ActionPerformed

    private void windowjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_windowjComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_windowjComboBoxActionPerformed

    private void spaceHeatingjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spaceHeatingjComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spaceHeatingjComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton generateGraphjButton1;
    private javax.swing.JButton generateGraphjButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> lightFixtureTypejComboBox;
    private javax.swing.JPanel pieReportjPanel;
    private javax.swing.JComboBox powerTypejComboBox;
    private javax.swing.JPanel reportDisplayjPanel;
    private javax.swing.JComboBox<String> spaceHeatingjComboBox;
    private javax.swing.JComboBox<String> windowjComboBox;
    // End of variables declaration//GEN-END:variables

    private void setValuesForGraph() {

        if (windowjComboBox.getSelectedItem().equals("Single Glass")) {
            windowEnergyContent = (float) (windowEnergyContent + 0);
        } else if (windowjComboBox.getSelectedItem().equals("Double Pane")) {
            windowEnergyContent = (float) (windowEnergyContent + 50);
        } else if (windowjComboBox.getSelectedItem().equals("Low E4")) {
            windowEnergyContent = (float) (windowEnergyContent + 75);
        } 

        if (powerTypejComboBox.getSelectedItem().equals("Electricity")) {
            powerEnergyContent = (float) (powerEnergyContent + 0);
        } else if (powerTypejComboBox.getSelectedItem().equals("Hybrid energy")) {
            powerEnergyContent = (float) (powerEnergyContent + 65);
        } else if (powerTypejComboBox.getSelectedItem().equals("Solar")) {
            powerEnergyContent = (float) (powerEnergyContent + 85);
        }

        if (spaceHeatingjComboBox.getSelectedItem().equals("Electricity")) {
            spaceHeatingEnergyContent = (float) (spaceHeatingEnergyContent + 0);
        } else if (spaceHeatingjComboBox.getSelectedItem().equals("Gas-Fired")) {
            spaceHeatingEnergyContent = (float) (spaceHeatingEnergyContent + 25);
        } else if (spaceHeatingjComboBox.getSelectedItem().equals("Boiler")) {
            spaceHeatingEnergyContent = (float) (spaceHeatingEnergyContent + 55);
        } else if (spaceHeatingjComboBox.getSelectedItem().equals("Wood-Burning")) {
            spaceHeatingEnergyContent = (float) (spaceHeatingEnergyContent + 80);
        } 

        if (lightFixtureTypejComboBox.getSelectedItem().equals("LED")) {
            lightEnergyContent = (float) (lightEnergyContent + 80);
        } else if (lightFixtureTypejComboBox.getSelectedItem().equals("CFL")) {
            lightEnergyContent = (float) (lightEnergyContent + 45);
        } else if (lightFixtureTypejComboBox.getSelectedItem().equals("Incandescent Light Bulbs")) {
            lightEnergyContent = (float) (lightEnergyContent + 0);
        }

        report.setEnergyWindow(windowEnergyContent);

        report.setEnergySpaceHeating(spaceHeatingEnergyContent);

        report.setEnergyPower(powerEnergyContent);

        report.setEnergyLight(lightEnergyContent);

        //Total Energy Savings for barchart2
        report.setTotalEnergySaving((windowEnergyContent + spaceHeatingEnergyContent + powerEnergyContent + lightEnergyContent)/4);



        //initComponents();
        EnergySavingsReportChart chart = new EnergySavingsReportChart(applicationTitle, chartTitle, report);
        reportDisplayjPanel.removeAll();
        reportDisplayjPanel.add(chart.getChartPanel());
        reportDisplayjPanel.setVisible(true);
        reportDisplayjPanel.validate();
    }

}
